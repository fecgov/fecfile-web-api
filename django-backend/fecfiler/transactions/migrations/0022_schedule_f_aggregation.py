# Generated by Django 5.2 on 2025-05-07 18:18

from django.db import migrations
from django.db.models import F
from fecfiler.transactions.utils import filter_queryset_for_previous_transactions_in_aggregation


def calculate_schedule_f_aggregates(apps, schema_editor):
    CommitteeAccount = apps.get_model("committee_accounts", "CommitteeAccount")  # noqa
    Transaction = apps.get_model("transactions", "Transaction")  # noqa

    for committee in CommitteeAccount.objects.all():
        schedule_f_transactions = Transaction.objects.all().filter(
            committee_account=committee,
            schedule_f__isnull=False,
        ).annotate(
            date=F("schedule_f__expenditure_date"),
            amount=F("schedule_f__expenditure_amount")
        ).order_by("date")

        for trans in schedule_f_transactions:
            previous_transactions = filter_queryset_for_previous_transactions_in_aggregation(
                schedule_f_transactions,
                trans.date,
                trans.aggregation_group,
                trans.id,
                None,
                trans.contact_2.id,
                None,
                trans.schedule_f.general_election_year
            )

            previous_transaction = previous_transactions.first()
            previous_aggregate = 0
            if previous_transaction:
                previous_aggregate = (
                    previous_transaction.schedule_f.aggregate_general_elec_expended
                )

            trans.schedule_f.aggregate_general_elec_expended = (
                trans.amount + previous_aggregate
            )
            trans.schedule_f.save()


class Migration(migrations.Migration):

    dependencies = [
        ('transactions', '0021_alter_transaction_reports'),
    ]

    operations = [
        migrations.RunPython(calculate_schedule_f_aggregates, migrations.RunPython.noop),
    ]
