# Generated by Django 4.1.3 on 2023-06-05 20:15

from django.db import migrations


ttis_to_change = {
    "PARTNERSHIP_MEMO": "PARTNERSHIP_ATTRIBUTION",
    "PARTNERSHIP_INDIVIDUAL_JF_TRANSFER_MEMO": "PARTNERSHIP_ATTRIBUTION_JF_TRANSFER_MEMO",
    "PARTNERSHIP_INDIVIDUAL_NATIONAL_PARTY_RECOUNT_JF_TRANSFER_MEMO": "PARTNERSHIP_ATTRIBUTION_NATIONAL_PARTY_RECOUNT_JF_TRANSFER_MEMO", # noqa: E501
    "PARTNERSHIP_INDIVIDUAL_NATIONAL_PARTY_CONVENTION_JF_TRANSFER_MEMO": "PARTNERSHIP_ATTRIBUTION_NATIONAL_PARTY_CONVENTION_JF_TRANSFER_MEMO", # noqa: E501
    "PARTNERSHIP_INDIVIDUAL_NATIONAL_PARTY_HEADQUARTERS_JF_TRANSFER_MEMO": "PARTNERSHIP_ATTRIBUTION_NATIONAL_PARTY_HEADQUARTERS_JF_TRANSFER_MEMO", # noqa: E501
    "PARTNERSHIP_RECOUNT_ACCOUNT_RECEIPT_MEMO": "PARTNERSHIP_ATTRIBUTION_RECOUNT_ACCOUNT_RECEIPT_MEMO", # noqa: E501
    "PARTNERSHIP_NATIONAL_PARTY_RECOUNT_ACCOUNT_MEMO": "PARTNERSHIP_ATTRIBUTION_NATIONAL_PARTY_RECOUNT_ACCOUNT_MEMO", # noqa: E501
    "PARTNERSHIP_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT_MEMO": "PARTNERSHIP_ATTRIBUTION_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT_MEMO", # noqa: E501
    "PARTNERSHIP_NATIONAL_PARTY_CONVENTION_ACCOUNT_MEMO": "PARTNERSHIP_ATTRIBUTION_NATIONAL_PARTY_CONVENTION_ACCOUNT_MEMO", # noqa: E501
}


def update_ttis(apps, schema_editor): # noqa
    Transaction = apps.get_model("transactions", "Transaction")  # noqa
    for transaction in Transaction.objects.all():
        keys = list(ttis_to_change.keys())
        if transaction.transaction_type_identifier in keys:
            new_tti = ttis_to_change[transaction.transaction_type_identifier]
            transaction.transaction_type_identifier = new_tti
            transaction.save()

def reverse_ttis(apps, schema_editor): # noqa
    reverse_ttis_to_change = {}
    for key in ttis_to_change:
        value = ttis_to_change[key]
        reverse_ttis_to_change[value] = key

    Transaction = apps.get_model("transactions", "Transaction")  # noqa
    for transaction in Transaction.objects.all():
        keys = list(reverse_ttis_to_change.keys())
        if transaction.transaction_type_identifier in keys:
            new_tti = reverse_ttis_to_change[transaction.transaction_type_identifier]
            transaction.transaction_type_identifier = new_tti
            transaction.save()


class Migration(migrations.Migration):
    dependencies = [
        ("transactions", "0013_remove_contact_add_contact_1_contact_2"),
    ]

    operations = [
        migrations.RunPython(update_ttis, reverse_code=reverse_ttis)
    ]
