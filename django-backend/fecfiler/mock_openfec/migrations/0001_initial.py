# Generated by Django 3.2.12 on 2023-02-07 19:40

import django.contrib.postgres.fields
from django.core import serializers
from django.db import migrations, models
import uuid


def forwards_func(apps, schema_editor):
    original_apps = serializers.python.apps
    serializers.python.apps = apps
    for path in ["fecfiler/mock_openfec/fixtures/test_efo_committee_accounts.json"]:
        fixture_file = path
        fixture = open(fixture_file)
        objects = serializers.deserialize("json", fixture)
        for obj in objects:
            obj.save()
        fixture.close()
    serializers.python.apps = original_apps


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MockCommitteeDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('affiliated_committee_name', models.TextField(blank=True, null=True)),
                ('candidate_ids', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('city', models.TextField(blank=True, null=True)),
                ('committee_id', models.TextField(unique=True)),
                ('committee_type', models.TextField(blank=True, null=True)),
                ('committee_type_full', models.TextField(blank=True, null=True)),
                ('custodian_city', models.TextField(blank=True, null=True)),
                ('custodian_name_1', models.TextField(blank=True, null=True)),
                ('custodian_name_2', models.TextField(blank=True, null=True)),
                ('custodian_name_full', models.TextField(blank=True, null=True)),
                ('custodian_name_middle', models.TextField(blank=True, null=True)),
                ('custodian_name_prefix', models.TextField(blank=True, null=True)),
                ('custodian_name_suffix', models.TextField(blank=True, null=True)),
                ('custodian_name_title', models.TextField(blank=True, null=True)),
                ('custodian_phone', models.TextField(blank=True, null=True)),
                ('custodian_state', models.TextField(blank=True, null=True)),
                ('custodian_street_1', models.TextField(blank=True, null=True)),
                ('custodian_street_2', models.TextField(blank=True, null=True)),
                ('custodian_zip', models.TextField(blank=True, null=True)),
                ('cycles', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('designation', models.TextField(blank=True, null=True)),
                ('designation_full', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('filing_frequency', models.TextField(blank=True, null=True)),
                ('first_f1_date', models.TextField(blank=True, null=True)),
                ('first_file_date', models.TextField(blank=True, null=True)),
                ('form_type', models.TextField(blank=True, null=True)),
                ('last_f1_date', models.TextField(blank=True, null=True)),
                ('last_file_date', models.TextField(blank=True, null=True)),
                ('leadership_pac', models.TextField(blank=True, null=True)),
                ('lobbyist_registrant_pac', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('organization_type', models.TextField(blank=True, null=True)),
                ('organization_type_full', models.TextField(blank=True, null=True)),
                ('party', models.TextField(blank=True, null=True)),
                ('party_full', models.TextField(blank=True, null=True)),
                ('party_type', models.TextField(blank=True, null=True)),
                ('party_type_full', models.TextField(blank=True, null=True)),
                ('sponsor_candidate_ids', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('state_full', models.TextField(blank=True, null=True)),
                ('street_1', models.TextField(blank=True, null=True)),
                ('street_2', models.TextField(blank=True, null=True)),
                ('treasurer_city', models.TextField(blank=True, null=True)),
                ('treasurer_name', models.TextField(blank=True, null=True)),
                ('treasurer_name_1', models.TextField(blank=True, null=True)),
                ('treasurer_name_2', models.TextField(blank=True, null=True)),
                ('treasurer_name_middle', models.TextField(blank=True, null=True)),
                ('treasurer_name_prefix', models.TextField(blank=True, null=True)),
                ('treasurer_name_suffix', models.TextField(blank=True, null=True)),
                ('treasurer_name_title', models.TextField(blank=True, null=True)),
                ('treasurer_phone', models.TextField(blank=True, null=True)),
                ('treasurer_state', models.TextField(blank=True, null=True)),
                ('treasurer_street_1', models.TextField(blank=True, null=True)),
                ('treasurer_street_2', models.TextField(blank=True, null=True)),
                ('treasurer_zip', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mock_committee_detail',
            },
        ),
        migrations.RunPython(forwards_func),
    ]
