# Generated by Django 3.2.12 on 2022-10-07 17:26

from django.db import migrations, models


##Machine-generated dict right here.  Not sure it'd be worth it to break it up into hundreds of lines
tid_to_aggregation_groups = {'INDIVIDUAL_RECEIPT': 'General', 'TRIBAL_RECEIPT': 'General', 'EARMARK_RECEIPT': 'General', 'EARMARK_MEMO': 'General', 'PARTY_RECEIPT': 'General', 'PAC_RECEIPT': 'General', 'PAC_EARMARK_RECEIPT': 'General', 'PAC_EARMARK_MEMO': 'General', 'TRANSFER': 'General', 'JOINT_FUNDRAISING_TRANSFER': 'General', 'INDIVIDUAL_JF_TRANSFER_MEMO': 'General', 'PARTY_JF_TRANSFER_MEMO': 'General', 'PAC_JF_TRANSFER_MEMO': 'General', 'TRIBAL_JF_TRANSFER_MEMO': 'General', 'PARTNERSHIP_JF_TRANSFER_MEMO': ' DESIGN TBD', 'PARTNERSHIP_INDIVIDUAL_JF_TRANSFER_MEMO': ' DESIGN TBD', 'OFFSET_TO_OPERATING_EXPENDITURES': 'Line 15', 'REFUND_TO_REGISTERED_COMMITTEE': 'Line 16', 'REFUND_TO_UNREGISTERED_COMMITTEE': 'Line 16', 'JF_TRANSFER_NATIONAL_PARTY_CONVENTION_ACCOUNT': 'National Party Convention Account', 'INDIVIDUAL_NATIONAL_PARTY_CONVENTION_JF_TRANSFER_MEMO': 'National Party Convention Account', 'PAC_NATIONAL_PARTY_CONVENTION_JF_TRANSFER_MEMO': 'National Party Convention Account', 'TRIBAL_NATIONAL_PARTY_CONVENTION_JF_TRANSFER_MEMO': 'National Party Convention Account', 'PARTNERSHIP_CONVENTION_JF_TRANSFER_MEMO': ' DESIGN TBD', 'PARTNERSHIP_INDIVIDUAL_CONVENTION_JF_TRANSFER_MEMO': ' DESIGN TBD', 'INDIVIDUAL_NATIONAL_PARTY_CONVENTION_ACCOUNT': 'National Party Convention Account', 'PARTY_NATIONAL_PARTY_CONVENTION_ACCOUNT': 'National Party Convention Account', 'PAC_NATIONAL_PARTY_CONVENTION_ACCOUNT': 'National Party Convention Account', 'TRIBAL_NATIONAL_PARTY_CONVENTION_ACCOUNT': 'National Party Convention Account', 'JF_TRANSFER_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT': 'National Party Headquarters Account', 'INDIVIDUAL_NATIONAL_PARTY_HEADQUARTERS_JF_TRANSFER_MEMO': 'National Party Headquarters Account', 'PAC_NATIONAL_PARTY_HEADQUARTERS_JF_TRANSFER_MEMO': 'National Party Headquarters Account', 'TRIBAL_NATIONAL_PARTY_HEADQUARTERS_JF_TRANSFER_MEMO': 'National Party Headquarters Account', 'PARTNERSHIP_HEADQUARTERS_JF_TRANSFER_MEMO': ' DESIGN TBD', 'PARTNERSHIP_INDIVIDUAL_HEADQUARTERS_JF_TRANSFER_MEMO': ' DESIGN TBD', 'INDIVIDUAL_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT': 'National Party Headquarters Account', 'PARTY_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT': 'National Party Headquarters Account', 'PAC_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT': 'National Party Headquarters Account', 'TRIBAL_NATIONAL_PARTY_HEADQUARTERS_ACCOUNT': 'National Party Headquarters Account', 'JF_TRANSFER_NATIONAL_PARTY_RECOUNT_ACCOUNT': 'National Party Recount Account', 'INDIVIDUAL_NATIONAL_PARTY_JF_TRANSFER_RECOUNT_MEMO': 'National Party Recount Account', 'PAC_NATIONAL_PARTY_JF_TRANSFER_RECOUNT_MEMO': 'National Party Recount Account', 'TRIBAL_NATIONAL_PARTY_JF_TRANSFER_RECOUNT_MEMO': 'National Party Recount Account', 'PARTNERSHIP_RECOUNT_JF_TRANSFER_MEMO': ' DESIGN TBD', 'PARTNERSHIP_INDIVIDUAL_RECOUNT_JF_TRANSFER_MEMO': ' DESIGN TBD', 'INDIVIDUAL_NATIONAL_PARTY_RECOUNT_ACCOUNT': 'National Party Recount Account', 'PARTY_NATIONAL_PARTY_RECOUNT_ACCOUNT': 'National Party Recount Account', 'PAC_NATIONAL_PARTY_RECOUNT_ACCOUNT': 'National Party Recount Account', 'TRIBAL_NATIONAL_PARTY_RECOUNT_ACCOUNT': 'National Party Recount Account', 'INDIVIDUAL_RECEIPT_NON_CONTRIBUTION_ACCOUNT': 'Non-Contribution Account', 'OTHER_COMMITTEE_NON_CONTRIBUTION_ACCOUNT': 'Non-Contribution Account', 'BUSINESS_LABOR_NON_CONTRIBUTION_ACCOUNT': 'Non-Contribution Account', 'OTHER_RECEIPT': 'Other Receipts', 'INDIVIDUAL_RECOUNT_RECEIPT': 'Recount Account', 'PARTY_RECOUNT_RECEIPT': 'Recount Account', 'PAC_RECOUNT_RECEIPT': 'Recount Account', 'TRIBAL_RECOUNT_RECEIPT': 'Recount Account'} #noqa


def populate_aggregation_group_fields(apps, _):
    sch_a_transaction = apps.get_model("scha_transactions", "SchATransaction")  # noqa

    for t in sch_a_transaction.objects.all():
        tid = t.transaction_type_identifier
        if (tid in tid_to_aggregation_groups.keys()):
            t.aggregation_group = tid_to_aggregation_groups[tid]
            t.save()
        else:
            print("\nMissing Transaction Type Identifier!", tid)


def reverse_op(_apps, _):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('scha_transactions', '0025_update_transaction_identifiers'),
    ]

    operations = [
        migrations.AddField(
            model_name='schatransaction',
            name='aggregation_group',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RunPython(populate_aggregation_group_fields, reverse_op)
    ]
